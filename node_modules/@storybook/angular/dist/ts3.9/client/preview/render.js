"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.renderToDOM = exports.render = exports.rendererFactory = void 0;
const helpers_1 = require("./angular/helpers");
const RendererFactory_1 = require("./angular-beta/RendererFactory");
exports.rendererFactory = new RendererFactory_1.RendererFactory();
exports.render = (props) => ({ props });
function renderToDOM({ storyFn, showMain, forceRemount, storyContext: { parameters, component }, id, }, element) {
    return __awaiter(this, void 0, void 0, function* () {
        showMain();
        if (parameters.angularLegacyRendering) {
            helpers_1.renderNgApp(storyFn, !forceRemount);
            return;
        }
        const renderer = yield exports.rendererFactory.getRendererInstance(id, element);
        yield renderer.render({
            storyFnAngular: storyFn(),
            component,
            parameters,
            forced: !forceRemount,
            targetDOMNode: element,
        });
    });
}
exports.renderToDOM = renderToDOM;
